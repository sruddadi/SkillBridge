{"ast":null,"code":"var _jsxFileName = \"/Users/srikaruddadi/Desktop/WDM/skillbridgereact/src/Components/Modal.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"../css/modal.css\"; // Import your CSS file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Modal = ({\n  email,\n  closeModal\n}) => {\n  _s();\n  const [modal, setModal] = useState(false);\n  const [fname, setFname] = useState(\"\");\n  const [lname, setLname] = useState(\"\");\n  const [role, setRole] = useState(\"\");\n  const loadPrograms = async () => {\n    fetch(\"https://sxt9335.uta.cloud/fetchModal.php\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/x-www-form-urlencoded\"\n      },\n      body: `email=${email}`\n    }).then(response => response.text()).then(data => {\n      const [fname, lname, role] = data.split(\",\");\n      setFname(fname);\n      setLname(lname);\n      setRole(role);\n    }).catch(error => {\n      console.error(\"Error:\", error);\n    });\n  };\n  const toggleModal = () => {\n    setModal(!modal);\n    closeModal();\n  };\n  if (modal) {\n    document.body.classList.add(\"active-modal\");\n  } else {\n    document.body.classList.remove(\"active-modal\");\n  }\n  useEffect(() => {\n    loadPrograms();\n    setModal(!modal);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: modal && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: toggleModal,\n        className: \"overlay\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Profile Details\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Name: \", fname, \" \", lname, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 37\n          }, this), \"Email: \", email, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 30\n          }, this), \"Role: \", role]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"close-modal\",\n          onClick: toggleModal,\n          children: \"CLOSE\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n_s(Modal, \"JEL+qUYvYszYG9DLeAjl4PFLWR0=\");\n_c = Modal;\nexport default Modal;\nvar _c;\n$RefreshReg$(_c, \"Modal\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","Modal","email","closeModal","_s","modal","setModal","fname","setFname","lname","setLname","role","setRole","loadPrograms","fetch","method","headers","body","then","response","text","data","split","catch","error","console","toggleModal","document","classList","add","remove","children","className","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/srikaruddadi/Desktop/WDM/skillbridgereact/src/Components/Modal.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"../css/modal.css\"; // Import your CSS file\n\nconst Modal = ({ email, closeModal }) => {\n  const [modal, setModal] = useState(false);\n  const [fname, setFname] = useState(\"\");\n  const [lname, setLname] = useState(\"\");\n  const [role, setRole] = useState(\"\");\n  const loadPrograms = async () => {\n    fetch(\"https://sxt9335.uta.cloud/fetchModal.php\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/x-www-form-urlencoded\",\n      },\n      body: `email=${email}`,\n    })\n      .then((response) => response.text())\n      .then((data) => {\n        const [fname, lname, role] = data.split(\",\");\n        setFname(fname);\n        setLname(lname);\n        setRole(role);\n      })\n      .catch((error) => {\n        console.error(\"Error:\", error);\n      });\n  };\n\n  const toggleModal = () => {\n    setModal(!modal);\n    closeModal();\n  };\n\n  if (modal) {\n    document.body.classList.add(\"active-modal\");\n  } else {\n    document.body.classList.remove(\"active-modal\");\n  }\n\n  useEffect(() => {\n    loadPrograms();\n    setModal(!modal);\n  }, []);\n\n  return (\n    <>\n      {modal && (\n        <div className=\"modal\">\n          <div onClick={toggleModal} className=\"overlay\"></div>\n          <div className=\"modal-content\">\n            <h3>Profile Details</h3>\n            <p>\n              Name: {fname} {lname} <br></br>\n              Email: {email} <br></br>\n              Role: {role}\n            </p>\n            <button className=\"close-modal\" onClick={toggleModal}>\n              CLOSE\n            </button>\n          </div>\n        </div>\n      )}\n    </>\n  );\n};\nexport default Modal;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}