{"ast":null,"code":"var _jsxFileName = \"/Users/srikaruddadi/Desktop/WDM/skillbridgereact/src/Components/chart.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { Bar } from \"react-chartjs-2\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BarChart = () => {\n  _s();\n  const [data, setData] = useState({});\n  useEffect(() => {\n    // Fetch data from your PHP API endpoint\n    fetch(\"https://sxt9335.uta.cloud/fetchData.php\").then(response => response.json()).then(data => {\n      // Extract roles and user counts\n      const roles = [\"Admin\", \"Student\", \"Program Coordinator\", \"Instructor\", \"QA Organizer\"]; // Static roles\n      const userCounts = [0, 0, 0, 0, 0]; // Initialize counts for each role\n\n      data.forEach(item => {\n        const roleIndex = roles.indexOf(item.role);\n        if (roleIndex !== -1) {\n          userCounts[roleIndex] = item.userCount;\n        }\n      });\n\n      // Create the chart data\n      const chartData = {\n        labels: roles,\n        datasets: [{\n          label: \"User Count\",\n          data: userCounts,\n          backgroundColor: \"rgba(75, 192, 192, 0.2)\",\n          borderColor: \"rgba(75, 192, 192, 1)\",\n          borderWidth: 1\n        }]\n      };\n      setData(chartData);\n    }).catch(error => {\n      console.error(\"Error fetching data:\", error);\n    });\n  }, []);\n  const options = {\n    scales: {\n      y: {\n        beginAtZero: true\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bar-chart\",\n    children: /*#__PURE__*/_jsxDEV(Bar, {\n      data: data,\n      options: options\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n_s(BarChart, \"tNVKLF/eI269iIOS4WygXQde5D8=\");\n_c = BarChart;\nexport default BarChart;\nvar _c;\n$RefreshReg$(_c, \"BarChart\");","map":{"version":3,"names":["React","useEffect","useState","Bar","jsxDEV","_jsxDEV","BarChart","_s","data","setData","fetch","then","response","json","roles","userCounts","forEach","item","roleIndex","indexOf","role","userCount","chartData","labels","datasets","label","backgroundColor","borderColor","borderWidth","catch","error","console","options","scales","y","beginAtZero","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/srikaruddadi/Desktop/WDM/skillbridgereact/src/Components/chart.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Bar } from \"react-chartjs-2\";\n\nconst BarChart = () => {\n  const [data, setData] = useState({});\n\n  useEffect(() => {\n    // Fetch data from your PHP API endpoint\n    fetch(\"https://sxt9335.uta.cloud/fetchData.php\")\n      .then((response) => response.json())\n      .then((data) => {\n        // Extract roles and user counts\n        const roles = [\n          \"Admin\",\n          \"Student\",\n          \"Program Coordinator\",\n          \"Instructor\",\n          \"QA Organizer\",\n        ]; // Static roles\n        const userCounts = [0, 0, 0, 0, 0]; // Initialize counts for each role\n\n        data.forEach((item) => {\n          const roleIndex = roles.indexOf(item.role);\n          if (roleIndex !== -1) {\n            userCounts[roleIndex] = item.userCount;\n          }\n        });\n\n        // Create the chart data\n        const chartData = {\n          labels: roles,\n          datasets: [\n            {\n              label: \"User Count\",\n              data: userCounts,\n              backgroundColor: \"rgba(75, 192, 192, 0.2)\",\n              borderColor: \"rgba(75, 192, 192, 1)\",\n              borderWidth: 1,\n            },\n          ],\n        };\n\n        setData(chartData);\n      })\n      .catch((error) => {\n        console.error(\"Error fetching data:\", error);\n      });\n  }, []);\n\n  const options = {\n    scales: {\n      y: {\n        beginAtZero: true,\n      },\n    },\n  };\n\n  return (\n    <div className=\"bar-chart\">\n      <Bar data={data} options={options} />\n    </div>\n  );\n};\n\nexport default BarChart;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,GAAG,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtC,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC,CAAC,CAAC,CAAC;EAEpCD,SAAS,CAAC,MAAM;IACd;IACAS,KAAK,CAAC,yCAAyC,CAAC,CAC7CC,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEH,IAAI,IAAK;MACd;MACA,MAAMM,KAAK,GAAG,CACZ,OAAO,EACP,SAAS,EACT,qBAAqB,EACrB,YAAY,EACZ,cAAc,CACf,CAAC,CAAC;MACH,MAAMC,UAAU,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;;MAEpCP,IAAI,CAACQ,OAAO,CAAEC,IAAI,IAAK;QACrB,MAAMC,SAAS,GAAGJ,KAAK,CAACK,OAAO,CAACF,IAAI,CAACG,IAAI,CAAC;QAC1C,IAAIF,SAAS,KAAK,CAAC,CAAC,EAAE;UACpBH,UAAU,CAACG,SAAS,CAAC,GAAGD,IAAI,CAACI,SAAS;QACxC;MACF,CAAC,CAAC;;MAEF;MACA,MAAMC,SAAS,GAAG;QAChBC,MAAM,EAAET,KAAK;QACbU,QAAQ,EAAE,CACR;UACEC,KAAK,EAAE,YAAY;UACnBjB,IAAI,EAAEO,UAAU;UAChBW,eAAe,EAAE,yBAAyB;UAC1CC,WAAW,EAAE,uBAAuB;UACpCC,WAAW,EAAE;QACf,CAAC;MAEL,CAAC;MAEDnB,OAAO,CAACa,SAAS,CAAC;IACpB,CAAC,CAAC,CACDO,KAAK,CAAEC,KAAK,IAAK;MAChBC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC9C,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAEN,MAAME,OAAO,GAAG;IACdC,MAAM,EAAE;MACNC,CAAC,EAAE;QACDC,WAAW,EAAE;MACf;IACF;EACF,CAAC;EAED,oBACE9B,OAAA;IAAK+B,SAAS,EAAC,WAAW;IAAAC,QAAA,eACxBhC,OAAA,CAACF,GAAG;MAACK,IAAI,EAAEA,IAAK;MAACwB,OAAO,EAAEA;IAAQ;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAClC,CAAC;AAEV,CAAC;AAAClC,EAAA,CA3DID,QAAQ;AAAAoC,EAAA,GAARpC,QAAQ;AA6Dd,eAAeA,QAAQ;AAAC,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}